name: main
on:
  push:
    branches: [ "database", "main" ]
    paths-ignore:
      - 'README.md'
  #pull_request:
  #  branches: [ "main" ]
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true
jobs:
  pre-checks:
    runs-on: self-hosted
    steps:
      - name: Check if Docker is installed
        run: |
          if ! command -v docker &> /dev/null
          then
            echo "Docker is not installed!"
            exit 1
          else
            echo "Docker is installed."
          fi
  clean-last-build:
    needs: pre-checks
    runs-on: [self-hosted]
    steps:
      - name: Cleanup Existing Container
        run: |
          echo "Cleaning up existing Docker container if it exists"
          if [ "$(docker ps -a -q -f name=wordpress)" ]; then
            docker stop wordpress || true
            docker rm wordpress || true
          fi
          echo "Cleaning up existing Docker image if it exists"
          if [ "$(docker images -q wordpress)" ]; then
            docker rmi wordpress || true
          fi
  checkout-new-code:
    needs: clean-last-build
    runs-on: [self-hosted]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2
  create-env-file:
    needs: checkout-new-code
    runs-on: [self-hosted]
    steps:
      - name: Create .env file
        run: |
          echo "WORDPRESS_SITE_TITLE=${{ vars.WORDPRESS_SITE_TITLE }}" >> .env
          echo "WORDPRESS_ADMIN_USER=${{ vars.WORDPRESS_ADMIN_USER }}" >> .env
          echo "WORDPRESS_ADMIN_PASSWORD=${{ secrets.WORDPRESS_ADMIN_PASSWORD }}" >> .env
          echo "WORDPRESS_ADMIN_EMAIL=${{ vars.WORDPRESS_ADMIN_EMAIL }}" >> .env      
          echo "WORDPRESS_DB_NAME=${{ vars.WORDPRESS_DB_NAME }}" >> .env
          echo "WORDPRESS_DB_USER=${{ vars.WORDPRESS_DB_USER }}" >> .env
          echo "WORDPRESS_DB_PASSWORD=${{ secrets.WORDPRESS_DB_PASSWORD }}" >> .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
  mount-volumes:
    needs: create-env-file
    runs-on: [self-hosted]
    steps:
      - name: Prepare bind mount directories
        run: |
          export DIRS="webapp/wordpress webapp/logs webapp/backups"
          mkdir -p $DIRS
          chown ${{ vars.OS_USERNAME }}:${{ vars.OS_USERGROUP }} $DIRS
  validate-app:
    needs: mount-volumes
    runs-on: [self-hosted]
    steps:
      - name: Validate Docker Compose File
        run: docker compose --env-file .env -f webapp/docker-compose.yml up -d --dry-run
  run-app:
    needs: validate-app
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: [self-hosted, main]
    steps:
      - name: Start WordPress Stack
        run: docker compose --env-file .env -f webapp/docker-compose.yml up -d
