name: simple pipeline
on:
  push:
    branches: [ "test" ]
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
  workflow_dispatch:
jobs:
  pre-checks:
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2
      - name: Check if Docker is installed
        run: |
          if ! command -v docker &> /dev/null
          then
            echo "Docker is not installed!"
            exit 1
          else
            echo "Docker is installed."
          fi
  clean-last-build:
    needs: pre-checks
    runs-on: [self-hosted, test]
    steps:
      - name: Cleanup Existing Container
        run: |
          echo "Cleaning up existing Docker container if it exists"
          if [ "$(docker ps -a -q -f name=flask-app)" ]; then
            docker stop flask-app || true
            docker rm flask-app || true
          fi
          echo "Cleaning up existing Docker image if it exists"
          if [ "$(docker images -q flask-app)" ]; then
            docker rmi flask-app || true
          fi
  build-app:
    needs: [pre-checks, clean-last-build]
    runs-on: [self-hosted, test]
    steps:
      - name: Build Docker Image
        run: docker build -t flask-app ./webapp
      - name: Inspect Docker Image
        run: docker inspect flask-app
  run-app:
    needs: [pre-checks, clean-last-build, build-app]
    if: github.ref == 'refs/heads/main'
    runs-on: [self-hosted, main]
    steps:
      - name: Run Flask Container
        run: docker run -d -p 5000:5000 --name flask-app flask-app
