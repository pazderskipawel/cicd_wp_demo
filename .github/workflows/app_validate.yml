name: Validate Docker Compose File

on:
  workflow_call:
    inputs:
      docker_installed:
        required: false
        type: boolean
        default: false
      docker_compose_installed:
        required: false
        type: boolean
        default: false
      mkcert_installed:
        required: false
        type: boolean
        default: false
jobs:
  docker-comnpse-dry-dun:
    runs-on: self-hosted
    steps:
      - name: Check if anything had to be installed
        if: ${{ inputs.docker_installed || inputs.docker_compose_installed || inputs.mkcert_installed }}
        run: |
          if [ "${{ inputs.docker_installed }}" ]; then
            echo "::warning:: docker had to be installed by cicd workflow. Please check runner status"
          fi
          if [ "${{ inputs.docker_compose_installed }}" ]; then
            echo "::warning:: docker compose had to be installed by cicd workflow. Please check runner status"
          fi
          if [ "${{ inputs.mkcert_installed }}" ]; then
            echo "::warning:: mkcert had to be installed by cicd workflow. Please check runner status"
          fi
      - name: Dry-run app
        run: docker compose -f webapp/docker-compose.yml up -d --dry-run
        env:
          WORDPRESS_SITE_TITLE: ${{ vars.WORDPRESS_SITE_TITLE }}
          WORDPRESS_ADMIN_USER: ${{ vars.WORDPRESS_ADMIN_USER }}
          WORDPRESS_ADMIN_PASSWORD: ${{ secrets.WORDPRESS_ADMIN_PASSWORD }}
          WORDPRESS_ADMIN_EMAIL: ${{ vars.WORDPRESS_ADMIN_EMAIL }}
          WORDPRESS_DB_NAME: ${{ vars.WORDPRESS_DB_NAME }}
          WORDPRESS_DB_USER: ${{ vars.WORDPRESS_DB_USER }}
          WORDPRESS_DB_PASSWORD: ${{ secrets.WORDPRESS_DB_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
