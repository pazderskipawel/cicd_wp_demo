name: Restore latest saved wordpress state from artifacts (Manual trigger)
on:
  workflow_dispatch:
    inputs:
      check_if_identical:
        description: 'Check if restored state is identical to backup'
        required: false
        default: false
        type: boolean
jobs:
  restore-wordpress-state:
    runs-on: self-hosted
    steps: 
      - name: Install GitHub CLI and jq
        run: |
          echo "${{ secrets.RUNNER_SUDO_PASSWD }}" | sudo -S apt update
          echo "${{ secrets.RUNNER_SUDO_PASSWD }}" | sudo -S apt install -y gh jq
      - name: Create restore directory - temporary for testing
        run: |
          echo "Creating restore directory"
          mkdir -p ./wp-restored
      - name: Find last successful run of saving state workflow
        id: get_run
        run: |
          run_id=$(gh run list --workflow app_save_current_state.yml --status success --limit 1 --json databaseId | jq -r '.[0].databaseId')
          echo "run_id=$run_id" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Download artifact from last successful run
        run: |
          gh run download ${{ steps.get_run.outputs.run_id }} -n wordpress-backup -D ./wp-restored/
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  check-if-restored-and-backup-are-identical:
    runs-on: self-hosted
    needs: restore-wordpress-state  
    if: ${{ github.event.inputs.check_if_identical == 'true' }}
    steps:
      - name: Check if wp-backup directory exists
        id: check-backup
        run: |
          if [ ! -d "./wp-backup" ]; then
            echo "wp-backup directory does not exist, can't check, exiting"
            echo "wp-backup_exists=0" >> $GITHUB_OUTPUT
          else
            echo "wp-backup_exists=1" >> $GITHUB_OUTPUT
          fi
      - name: Check if wp-restored and wp-backup directories contain the same files
        if: steps.check-backup.outputs.wp-backup_exists == '1' 
        run: |
          echo "Checking if wp-restored and wp-backup directories contain the same files"
          restored_sum=$(find ./wp-restored -type f -exec sha256sum {} \; | sort)
          backup_sum=$(find ./wp-backup -type f -exec sha256sum {} \; | sort)
          if diff <(echo "$restored_sum") <(echo "$backup_sum"); then
            echo "Directories are identical"
            echo "No need to restore, exiting"
            exit 1
          else
            echo "::warning:: Directories differ, proceeding with restore"
          fi
  restore-wordpress-state-from-backup:
    runs-on: self-hosted
    needs: [restore-wordpress-state, check-if-restored-and-backup-are-identical]
    steps:
      - name: Restore WordPress state from backup
        run: |
          echo "Restoring WordPress state from backup"
          docker cp ./wp-restored/. wordpress:/var/www/html/
          echo "WordPress state restored successfully from backup"
      - name: Restore database from backup
        run: |
          echo "Restoring database from backup"
          docker exec wordpress wp db import ./wp-restored/wordpress-db.sql
          echo "Database restored successfully from backup"